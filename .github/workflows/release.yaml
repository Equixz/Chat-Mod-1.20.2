name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Extract mod_version from gradle.properties
        id: extract_version
        run: |
          MOD_VERSION=$(grep '^mod_version' gradle.properties | cut -d'=' -f2 | tr -d '[:space:]')
          JAR_ARTIFACT_NAME="chat-mod-${MOD_VERSION}.jar"
          ZIP_ARTIFACT_NAME="chat-mod-${MOD_VERSION}.zip"
          echo "MOD_VERSION=${MOD_VERSION}" >> $GITHUB_ENV
          echo "JAR_ARTIFACT_NAME=${JAR_ARTIFACT_NAME}" >> $GITHUB_ENV
          echo "ZIP_ARTIFACT_NAME=${ZIP_ARTIFACT_NAME}" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.MOD_VERSION }}
          release_name: Release v${{ env.MOD_VERSION }}
          body: |
            Changes in this release:
            ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false

      - name: Upload JAR Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/libs/${{ env.JAR_ARTIFACT_NAME }}
          asset_name: ${{ env.JAR_ARTIFACT_NAME }}
          asset_content_type: application/java-archive

      - name: Upload ZIP Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/distributions/${{ env.ZIP_ARTIFACT_NAME }}
          asset_name: ${{ env.ZIP_ARTIFACT_NAME }}
          asset_content_type: application/zip